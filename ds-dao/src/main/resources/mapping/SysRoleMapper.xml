<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzfq.fms.dao.SysRoleMapper">
	<resultMap id="BaseResultMap" type="com.jzfq.fms.domain.SysRole">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="del_flag" jdbcType="TINYINT" property="delFlag" />
		<result column="role_code" jdbcType="TINYINT" property="roleCode" />
		<result column="product_code" jdbcType="TINYINT" property="productCode" />
	</resultMap>

	<sql id="Base_Column_List">
		id, name, description, create_time, update_time, del_flag,role_code,product_code
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sys_role
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="delRoleAndAuthByRoleId" parameterType="java.lang.Integer">
		delete from sys_role_auth where role_id = #{roleId}
	</delete>

	<insert id="insert" parameterType="com.jzfq.fms.domain.SysRole" useGeneratedKeys="true" keyProperty="id" >
		insert into sys_role (id,
		name, description,
		create_time, update_time, del_flag,role_code,product_code
		)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		NOW(),
		NOW(), #{delFlag,jdbcType=TINYINT}, 
		#{roleCode,jdbcType=TINYINT},
		#{productCode,jdbcType=TINYINT}
		)
	</insert>

	<insert id="insertSelective" parameterType="com.jzfq.fms.domain.SysRole" useGeneratedKeys="true" keyProperty="id">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="productCode != null">
				product_code,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=TINYINT},
			</if>
			<if test="productCode != null">
				#{productCode,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.jzfq.fms.domain.SysRole">
		update sys_role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=TINYINT},
			</if>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=TINYINT},
			</if>
			<if test="productCode != null">
				product_code = #{productCode,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.jzfq.fms.domain.SysRole">
		update sys_role
		set name = #{name,jdbcType=VARCHAR},
		description =
		#{description,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		del_flag =
		#{delFlag,jdbcType=TINYINT},
		role_code =  #{roleCode,jdbcType=TINYINT},
		product_code = #{productCode,jdbcType=TINYINT}
		where id = #{id,jdbcType=INTEGER}
	</update>
 
	
	<select id="listByRoleName" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select * from sys_role where name = #{name,jdbcType=VARCHAR} and del_flag=0
		order by create_time desc
	</select>
	
	<!--查询所有的角色-->
	<select id="queryRoleList" parameterType="com.jzfq.fms.common.common.PageVo" resultMap="BaseResultMap" >
		SELECT <include refid="Base_Column_List" /> FROM sys_role a where del_flag = 0
		<if test="vo.parameters.name!=null">
			and name LIKE CONCAT(#{vo.parameters.name},'%' )
		</if>
		<if test="vo.parameters.description!=null">
			or description LIKE CONCAT(#{vo.parameters.description},'%' )
		</if>
	</select>

	<insert id="insertRoleAuth" parameterType="map" >
		insert into sys_role_auth (role_id, auth_id) values
		<foreach collection="authIds" item="i" separator=",">
			(#{roleId},#{i})
		</foreach>
	</insert>

	<!--查询所有的角色-->
	<select id="queryAllRoleList" resultMap="BaseResultMap" >
		SELECT <include refid="Base_Column_List" /> FROM sys_role a where del_flag = 0
	</select>



</mapper>