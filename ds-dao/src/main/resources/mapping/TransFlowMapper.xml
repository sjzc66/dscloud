<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzfq.fms.dao.TransFlowMapper" >
  <resultMap id="BaseResultMap" type="com.jzfq.fms.domain.TransFlow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="plan_id" property="planId" jdbcType="INTEGER" />
    <result column="periods" property="periods" jdbcType="INTEGER" />
    <result column="pattern" property="pattern" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="pay_type" property="payType" jdbcType="TINYINT" />
    <result column="flow_time" property="flowTime" jdbcType="TIMESTAMP" />
    <result column="payid" property="payid" jdbcType="VARCHAR" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="personer" property="personer" jdbcType="VARCHAR" />
    <result column="personer_id" property="personerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, plan_id, periods, pattern, amount, pay_type, flow_time, payid, customer_id, order_id, 
    personer, personer_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from trans_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trans_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jzfq.fms.domain.TransFlow" >
    insert into trans_flow (id, plan_id, periods, 
      pattern, amount, pay_type, 
      flow_time, payid, customer_id, 
      order_id, personer, personer_id
      )
    values (#{id,jdbcType=INTEGER}, #{planId,jdbcType=INTEGER}, #{periods,jdbcType=INTEGER}, 
      #{pattern,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{payType,jdbcType=BIT}, 
      #{flowTime,jdbcType=TIMESTAMP}, #{payid,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, 
      #{orderId,jdbcType=INTEGER}, #{personer,jdbcType=VARCHAR}, #{personerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jzfq.fms.domain.TransFlow" >
    insert into trans_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="planId != null" >
        plan_id,
      </if>
      <if test="periods != null" >
        periods,
      </if>
      <if test="pattern != null" >
        pattern,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="flowTime != null" >
        flow_time,
      </if>
      <if test="payid != null" >
        payid,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="personer != null" >
        personer,
      </if>
      <if test="personerId != null" >
        personer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="planId != null" >
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="periods != null" >
        #{periods,jdbcType=INTEGER},
      </if>
      <if test="pattern != null" >
        #{pattern,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=BIT},
      </if>
      <if test="flowTime != null" >
        #{flowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payid != null" >
        #{payid,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="personer != null" >
        #{personer,jdbcType=VARCHAR},
      </if>
      <if test="personerId != null" >
        #{personerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jzfq.fms.domain.TransFlow" >
    update trans_flow
    <set >
      <if test="planId != null" >
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
      <if test="periods != null" >
        periods = #{periods,jdbcType=INTEGER},
      </if>
      <if test="pattern != null" >
        pattern = #{pattern,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="flowTime != null" >
        flow_time = #{flowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payid != null" >
        payid = #{payid,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="personer != null" >
        personer = #{personer,jdbcType=VARCHAR},
      </if>
      <if test="personerId != null" >
        personer_id = #{personerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jzfq.fms.domain.TransFlow" >
    update trans_flow
    set plan_id = #{planId,jdbcType=INTEGER},
      periods = #{periods,jdbcType=INTEGER},
      pattern = #{pattern,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=TINYINT},
      flow_time = #{flowTime,jdbcType=TIMESTAMP},
      payid = #{payid,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      personer = #{personer,jdbcType=VARCHAR},
      personer_id = #{personerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getFlowByPlanId" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List"/>
    FROM trans_flow where plan_id = #{planId}   
  </select>
</mapper>